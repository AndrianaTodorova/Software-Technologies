Controllers:
Index:
 @GetMapping("/")
    public String index(Model model) {
        List<Task> tasks = taskRepository.findAll();
        model.addAttribute("tasks", tasks);
        model.addAttribute("view", "task/index");
        return "base-layout";
    }
	
Create:
@GetMapping("/create")
    public String create(Model model) {
        model.addAttribute("task", new TaskBindingModel());
        model.addAttribute("view", "task/create");
        return "base-layout";
    }

    @PostMapping("/create")
    public String createPost(Model model, TaskBindingModel taskBindingModel) {
        if (taskBindingModel.getTitle().equals("") ||
                taskBindingModel.getComments().equals("")) {
            model.addAttribute("task", taskBindingModel);
            model.addAttribute("view", "task/create");
            return "base-layout";
        }

Delete:
@GetMapping("/delete/{id}")
    public String delete(Model model, @PathVariable int id) {
        Task task = taskRepository.findOne(id);
        if (task != null) {
            model.addAttribute("task", task);
            model.addAttribute("view", "task/delete");
            return "base-layout";
        }
        return "redirect:/";
    }

    @PostMapping("/delete/{id}")
    public String deletePost(Model model, @PathVariable int id) {
        try {
            taskRepository.delete(id);
        } catch (Exception ex) {
            // Task was not found -> do nothing
        }
        return "redirect:/";
    }

Edit:
  @GetMapping("/edit/{id}")
    public String edit(Model model, @PathVariable int id) {
        Task task = taskRepository.findOne(id);
        if (task != null) {
            model.addAttribute("task", task);
            model.addAttribute("view", "task/edit");
            return "base-layout";
        }
        return "redirect:/";
    }

    @PostMapping("/edit/{id}")
    public String editTask(
            Model model, @PathVariable int id, TaskBindingModel taskBindingModel) {
        if (taskBindingModel.getTitle().equals("") ||
                taskBindingModel.getComments().equals("")) {
            Task task = new Task();
            task.setId(id);
            task.setTitle(taskBindingModel.getTitle());
            task.setComments(taskBindingModel.getComments());
            model.addAttribute("task", task);
            model.addAttribute("view", "task/edit");
            return "base-layout";
        }


Task task = taskRepository.findOne(id);
        if (task != null) {
            task.setTitle(taskBindingModel.getTitle());
            task.setComments(taskBindingModel.getComments());
            taskRepository.saveAndFlush(task);
        }

        return "redirect:/";		