Controllers:
Index:
 /**
     * @param Request $request
     * @Route("/", name="index")
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function index(Request $request)
    {
        $repo = $this->getDoctrine()->getRepository(Task::class);
        $tasks = $repo->findAll();
        return $this->render(
            ":task:index.html.twig",
            ["tasks" => $tasks]
        );
    
Create:
 /**
     * @param Request $request
     * @Route("/create", name="create")
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function create(Request $request)
    {
        $task = new Task();
        $form = $this->createForm(TaskType::class, $task);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->persist($task);
            $em->flush();
            return $this->redirect("/");
        }
        return $this->render(
            ":task:create.html.twig",
            ["task" => $task, "form" => $form->createView()]
        );
    }
	
Delete:
 /**
     * @Route("/delete/{id}", name="delete")
     *
     * @param $id
     * @param Request $request
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function delete($id, Request $request)
    {
        $repo = $this->getDoctrine()->getRepository(Task::class);
        $task = $repo->find($id);
        if ($task == null) {
            return $this->redirect("/");
        }
        $form = $this->createForm(TaskType::class, $task);
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            $em->remove($task);
            $em->flush();
            return $this->redirect("/");
        }
        return $this->render(
            ":task:delete.html.twig",
            ["task" => $task, "form" => $form->createView()]
        );
    }

Edit:
/**
     * @Route("/edit/{id}", name="edit")
     *
     * @param $id
     * @param Request $request
     * @return \Symfony\Component\HttpFoundation\Response
     */
    public function edit($id, Request $request)
    {
        $repo = $this->getDoctrine()->getRepository(Task::class);
        $task = $repo->find($id);
        if ($task == null) {
            return $this->redirect("/");
        }
        $form = $this->createForm(TaskType::class, $task);
        $form->handleRequest($request);
        if ($form->isSubmitted() && $form->isValid()) {
            $em = $this->getDoctrine()->getManager();
            $em->merge($task);
            $em->flush();
            return $this->redirect("/");
        }
        return $this->render(
            ":task:edit.html.twig",
            ["task" => $task, "form" => $form->createView()]
        );
    }	
	